<#function getTaskDescription body>
        <#if body.variables.possibleCustomers?? && body.variables.possibleCustomers?has_content>
            <#assign description>
                The credit assessment for company ${body.variables.CustomerName} is canceled because the Credit agency could not uniquely identify the company.
                The following list of identities were found:
                <#list body.variables.possibleCustomers as possibleCustomer>
                    Company name: ${possibleCustomer.businessPartner.companyDisclosure.companyName!}
                    Company ID: ${possibleCustomer.businessPartner.companyDisclosure.companyId!}<#rt>
                    <#if possibleCustomer.businessPartner.companyDisclosure.vatId??>
                    VAT ID: ${possibleCustomer.businessPartner.companyDisclosure.vatId}<#rt>
                    </#if>
                    <#if possibleCustomer.businessPartner.addresses?? && possibleCustomer.businessPartner.addresses?has_content>
                    Address: <#if possibleCustomer.businessPartner.addresses[0].street?? && possibleCustomer.businessPartner.addresses[0].street?has_content>${possibleCustomer.businessPartner.addresses[0].street}</#if><#if possibleCustomer.businessPartner.addresses[0].number?? && possibleCustomer.businessPartner.addresses[0].number?has_content> ${possibleCustomer.businessPartner.addresses[0].number}</#if><#if possibleCustomer.businessPartner.addresses[0].city?? && possibleCustomer.businessPartner.addresses[0].city?has_content> ${possibleCustomer.businessPartner.addresses[0].city}</#if><#if possibleCustomer.businessPartner.addresses[0].zipCode?? && possibleCustomer.businessPartner.addresses[0].zipCode?has_content>${possibleCustomer.businessPartner.addresses[0].zipCode}</#if><#rt>
                    </#if>
                    <#if possibleCustomer.probability??>
                    Probability: ${possibleCustomer.probability}<#rt>
                    </#if>
                </#list>
                Please update the account in ICMore with the correct information from the list above.
                After you have made your changes, please restart the Credit assessment.
            </#assign>
        <#else>
            <#if body.variables.CustomerCountry == "ES">
                <#assign description>
                    The credit assessment for company ${body.variables.CustomerName} is canceled because the Credit agency could not uniquely identify the company.
                    Please check the correctness of the VAT number on https://www.vat-number-check.com/spain.html.
                    After you corrected the VAT number for this account in ICMore, please restart the Credit assessment.
                </#assign>
            <#elseif body.variables.CustomerCountry == "FR">
                <#assign description>
                    The credit assessment for company ${body.variables.CustomerName} is canceled because the Credit Agency could not uniquely identify the company.
                    Please check the correctness of the Siren number.
                    After you corrected the Siren number for this account in iCMore, please restart the Credit assessment.
                </#assign>
            <#elseif body.variables.CustomerCountry == "NL">
                <#assign description>
                    The credit assessment for company ${body.variables.CustomerName} is canceled because the Credit Agency could not uniquely identify the company.
                    Please check the correctness of the Enterprise number.
                    After you corrected the Enterprise number for this account in iCMore, please restart the Credit assessment.
                </#assign>
            <#elseif body.variables.CustomerCountry == "IT">
                <#assign description>
                    The credit assessment for company ${body.variables.CustomerName} is canceled because the Credit Agency could not uniquely identify the company.
                    Please check the correctness of the VAT number.
                    After you corrected the VAT number for this account in iCMore, please restart the Credit assessment.
                </#assign>
            <#elseif body.variables.CustomerCountry == "DE">
                <#assign description>
                    The credit assessment for company ${body.variables.CustomerName} is canceled because the Credit Agency could not uniquely identify the company.
                    Please check the correctness of the Enterprise number.
                    After you corrected the Enterprise number for this account in iCMore, please restart the Credit assessment.
                </#assign>
            </#if>
        </#if>
    </#if>
    <#if body.variables.TaskType == "MoreInfo_task"><#assign description>Business Underwriting has requested additional information concerning the following credit line request.
Account: ${body.variables.SET_AccountName}
Requested credit line: ${body.variables.RequestedCreditLine}
Request date: ${body.variables.ApplicationEntryDate}
Request: ${body.variables.QuestionOfUnderwriter}
Please open the Credit assessment URL and provide the needed information.</#assign></#if>
    <#return description>
</#function>

<#function getTaskSubject body>
    <#assign subject = "NOT_IMPLEMENTED">
    <#if body.variables.TaskType == "Hitlist_task">
        <#if body.variables.SET_AccountName?? && body.variables.SET_AccountName?has_content && (body.variables.SET_AccountName?length > 83)>
		    <#assign subject>Assessment canceled - Company ${body.variables.SET_AccountName[0..82]} couldn't be uniquely identified</#assign>
		<#else>
		    <#assign subject>Assessment canceled - Company ${body.variables.SET_AccountName} couldn't be uniquely identified</#assign>
		</#if>
    </#if>
    <#if body.variables.TaskType == "MoreInfo_task">
        <#if body.variables.SET_AccountName?? && body.variables.SET_AccountName?has_content>
		    <#assign subject>Credit assessment - Additional information requested for ${body.variables.SET_AccountName}</#assign>
		</#if>
    </#if>
    <#return subject>
</#function>
<#function hasUserRole user expectedUserRole>
    <#assign hasRole = false>
        <#if user.identity.selectedGroup.userRole == expectedUserRole>
            <#assign hasRole = true>
        </#if>
    <#return hasRole>
</#function>
<#function businessPolicyRulesHit policyRules>
  <#assign rules = []>
  <#list policyRules as policyRule>
    <#if policyRule.policyRuleTriggered == "1">
        <#local str = policyRule.policyRuleNumber + ", " + policyRule.policyRuleLabel>
        <#assign rules += [str]>
    </#if>
  </#list>
  <#return rules?join("|||")?json_string>
</#function>
<#function getCountryShorthand countryFullName>
    <#if countryFullName == "Netherlands">
        <#return "NL">
    <#elseif countryFullName == "Belgium">
        <#return "BE">
    <#elseif countryFullName == "Germany">
        <#return "GE">
    <#elseif countryFullName == "Spain">
        <#return "ES">
    </#if>
    <#return "Unknown">
</#function>
<#function dateAddDays date days>
    <#assign timeInMilliseconds = (1000 * 60 * 60 * 24 * days) >
    <#assign aDate = date?long + timeInMilliseconds?long>
    <#return aDate?number_to_date>
</#function>
<#function getCancellationStatus cancellationType>
    <#if cancellationType == "provideInformationTimeExpired">
        <#return "Canceled due to no information provided">
    <#elseif cancellationType == "hitlist">
        <#return "Canceled due to hitlist">
    <#elseif cancellationType == "error">
        <#return "Canceled due to error">
    <#elseif cancellationType == "manual">
        <#return "Canceled manually">
    <#elseif cancellationType == "creditstatus">
       <#return "Canceled due to credit status">
    <#elseif cancellationType == "multiplecompanies">
       <#return "Canceled due to multiple hits BI">
    <#elseif cancellationType == "thresholdexceeded">
       <#return "Cancelled retail threshold exceeded">
    <#elseif cancellationType == "notliable">
       <#return "Cancelled company not liable">
    <#elseif cancellationType == "biorganizationerror">
       <#return "Cancelled due to BI organization details error">
    <#elseif cancellationType == "bigconsolidationerror">
       <#return "Cancelled due to BI Group Consolidation error">
    <#elseif cancellationType == "eventnotprocessed">
       <#return "Cancelled due to User not found">
    <#elseif cancellationType == "assignManualCreditAssessmentTimeExpired">
       <#return "Cancelled no manual assessment performed">
    <#elseif cancellationType == "assessCreditManuallyTimeExpired">
       <#return "Cancelled no manual assessment performed">
    <#elseif cancellationType == "reviewAssessmentTimeExpired">
       <#return "Cancelled no manual assessment performed">
    </#if>
    <#return "Credit assessment canceled">
</#function>
<#macro printObjectToJson name="" source="" dontEscape="false" nested="false" hasNext="false">
    <#if name?has_content>
        "${name}":
    </#if>
    <#if source?is_hash>
        {
            <#list source?keys as key>
                <#assign hn = key?has_next?c>
                <@printObjectToJson name=key source=source[key] dontEscape=dontEscape nested="true" hasNext=hn />
            </#list>
        }<#if nested=="true" && hasNext=="true">,</#if>
    <#elseif source?is_sequence>
        [
            <#list source as seqObject>
                <#if seqObject?has_content>
                    <#assign hn = seqObject?has_next?c>
                    <@printObjectToJson source=seqObject dontEscape=dontEscape nested="true" hasNext=hn />
                </#if>
            </#list>
        ]<#if nested=="true" && hasNext=="true">,</#if>
    <#elseif source?is_boolean>
        "${source?string("true","false")}"<#if nested=="true" && hasNext=="true">,</#if>
    <#elseif source?is_number>
        "${source?c}"<#if nested=="true" && hasNext=="true">,</#if>
    <#else>
        <#if dontEscape=="true">"${source}"<#else>"${source?json_string}"</#if>
        <#if nested=="true" && hasNext=="true">,</#if>
    </#if>
</#macro>
<#macro printObjectToJsonString name="" source="" dontEscape="false" nested="false" hasNext="false">
    <@compress single_line=true>
    <#if name?has_content>
        \"${name}\":
    </#if>
    <#if source?is_hash>
        {
            <#list source?keys as key>
                <#assign hn = key?has_next?c>
                <@printObjectToJsonString name=key source=source[key] dontEscape=dontEscape nested="true" hasNext=hn />
            </#list>
        }<#if nested=="true" && hasNext=="true">,</#if>
    <#elseif source?is_sequence>
        [
            <#list source as seqObject>
                <#if seqObject?has_content>
                    <#assign hn = seqObject?has_next?c>
                    <@printObjectToJsonString source=seqObject dontEscape=dontEscape nested="true" hasNext=hn />
                </#if>
            </#list>
        ]<#if nested=="true" && hasNext=="true">,</#if>
    <#elseif source?is_boolean>
        \"${source?string("true","false")}\"<#if nested=="true" && hasNext=="true">,</#if>
    <#elseif source?is_number>
        \"${source?c}\"<#if nested=="true" && hasNext=="true">,</#if>
    <#else>
        <#if dontEscape=="true">\"${source}\"<#else>\"${source?json_string}\"</#if>
        <#if nested=="true" && hasNext=="true">,</#if>
    </#if>
    </@compress>
</#macro>
<#function determineMimeType fileName>
   <#assign extensionsMap = {
        'pdf': 'application/pdf',
        'docx': 'application/msword',
        'xlsx': 'application/vnd.ms-excel',
        'pptx': 'application/vnd.ms-powerpoint',
        'tif': 'image/tif',
        'tiff':'image/tiff',
        'gif': 'image/gif',
        'png': 'image/png',
        'jpeg': 'image/jpeg',
        'jpg':'image/jpg',
        'bmp': 'image/bmp',
        'txt': 'text/plain'
    }>
  <#return extensionsMap[fileName?keep_after_last(".")?lower_case]>
</#function>
<#macro uploadToDMSPiper uploadFields secureData headers historyProcess='false'>
    <#setting time_zone="Europe/Amsterdam">
    <#assign aDateTime = .now>
    <#assign timestamp = (aDateTime?long / 1000)?round?c>
    <#-- The documentRestrictionCode can have two values '70 - All users' and '71 - Underwriters only' -->
    <#if secureData.user.identity.selectedGroup.userRole?contains("Underwriter")>
        <#assign documentRestrictionCode = 71>
    <#else>
        <#assign documentRestrictionCode = 70>
    </#if>
    <#list uploadFields as uploadField>
        <#if headers.filesInfo[uploadField]??>
            {
                "type" : "transform",
                "name" : "dummy",
                "script" : "uploadedFiles = [:];"
            }, 
            <#if headers.filesInfo[uploadField]?is_sequence>
                <#list 0..headers.filesInfo[uploadField]?size-1 as index>
                    <#if historyProcess?? && historyProcess == 'true'>
                    {
                        "type" : "action",
                        "name" : "getVariableInstanceList",
                        "script" : "headers.processInstanceId = processId"
                    },
                    {
                        "type": "script",
                        "name": "transformVariableInstancesToVariables"
                    },
                    <#else>
                    {
                        "type" : "action",
                        "name" : "getProcessVariables",
                        "script" : "headers.processInstanceId = processId; headers.handleExceptionTemplate = 'getProcessVariables_error'; headers.handleRestExceptionTemplate = 'getProcessVariables_error'"
                    },
                    {
                        "type": "action",
                        "name": "handleProcessIsAlreadyFinished_piper",
                        "script": "body.processInstanceId = processId"
                    },
                    </#if>
                    {
                        "type": "script",
                        "name": "transformCamundaVariablesToObject"
                    },
                    {
                        "type" : "action",
                        "name" : "storeManuallyUploadedDocumentToDMS",
                        "script" : "initialBody = body; body = [\"documentRestrictionCode\":\"${documentRestrictionCode}\", \"uploadField\": \"${uploadField}\", \"fileIndex\": ${index}, \"fileData\": headers[\"${uploadField}\"][${index}], \"variables\": body]; headers.SAMLArt = SAMLArt; headers.handleExceptionTemplate = 'downloadAndStoreFilesToDMS_error'; headers.handleSoapExceptionTemplate = 'downloadAndStoreFilesToDMS_error'"
                    },
                    {
                        "type" : "transform",
                        "name" : "createManuallyUploadedFileInfoObjectTransform",
                        "script" : "requestId = body.requestId; requestError = body.requestError; body = [\"uploadField\": \"${uploadField}\", \"fileIndex\": ${index}, \"userFirstName\": userFirstName, \"userLastName\": userLastName, \"documentRestrictionCode\": ${documentRestrictionCode}, \"applicationId\": initialBody.ApplicationId];"
                    },
                    {
                        "type" : "action",
                        "name" : "startDocumentUploadStatusCheckProcess",
                        "script" : "body.variables = initialBody; body.variables.tenantId = tenantId; body.variables.mainProcessInstanceId = processId; body.documentInfo = body.fileInfo; body.requestId = requestId; body.requestError = requestError;"
                    }
                    <#sep>, </#sep>
                </#list>
            <#else>
                <#if historyProcess?? && historyProcess == 'true'>
                {
                    "type" : "action",
                    "name" : "getVariableInstanceList",
                    "script" : "headers.processInstanceId = processId"
                },
                {
                    "type": "script",
                    "name": "transformVariableInstancesToVariables"
                },
                <#else>
                {
                    "type" : "action",
                    "name" : "getProcessVariables",
                    "script" : "headers.processInstanceId = processId; headers.handleExceptionTemplate = 'getProcessVariables_error'; headers.handleRestExceptionTemplate = 'getProcessVariables_error'"
                },
                {
                    "type": "action",
                    "name": "handleProcessIsAlreadyFinished_piper",
                    "script": "body.processInstanceId = processId"
                }, 
                </#if>
                {
                    "type": "script",
                    "name": "transformCamundaVariablesToObject"
                },
                {
                    "type" : "action",
                    "name" : "storeManuallyUploadedDocumentToDMS",
                    "script" : " initialBody = body; body = [\"documentRestrictionCode\":\"${documentRestrictionCode}\",\"uploadField\": \"${uploadField}\", \"fileData\": headers[\"${uploadField}\"], \"variables\": body]; headers.SAMLArt = SAMLArt; headers.handleExceptionTemplate = 'downloadAndStoreFilesToDMS_error'; headers.handleSoapExceptionTemplate = 'downloadAndStoreFilesToDMS_error'"
                },
                {
                    "type" : "transform",
                    "name" : "createManuallyUploadedFileInfoObjectTransform",
                    "script" : "requestId = body.requestId; requestError = body.requestError; body = [\"uploadField\": \"${uploadField}\", \"userFirstName\": userFirstName, \"userLastName\": userLastName, \"documentRestrictionCode\": ${documentRestrictionCode}, \"applicationId\": initialBody.ApplicationId];"
                },
                {
                    "type" : "action",
                    "name" : "startDocumentUploadStatusCheckProcess",
                    "script" : "body.variables = initialBody; body.variables.tenantId = tenantId; body.variables.mainProcessInstanceId = processId; body.documentInfo = body.fileInfo; body.requestId = requestId; body.requestError = requestError;"
                }
            </#if>
        </#if>
    </#list>
</#macro>
<#macro printDocumentsVariables documentsVariables trailingComma=true>
    <#list documentsVariables as documentVariable>
        "${documentVariable.name}": {
            "value" : "{\"fileName\": \"${documentVariable.fileName?json_string}\", \"addedBy\": \"${documentVariable.addedBy?json_string}\", \"dateAdded\": \"${documentVariable.dateAdded}\", \"id\": \"${documentVariable.id}\"}",
            "type" : "Json"
        }
        <#if trailingComma>
            ,
        <#else>
            <#sep>,</#sep>
        </#if>
    </#list>
</#macro>
<#macro printCamundaVariablesForProcessStart camundaVariables>
    <#list camundaVariables?keys as variableName>
        "${variableName}": {
            "value" : "${camundaVariables[variableName].value}", 
            "type": "${camundaVariables[variableName].type}"
        }
    </#list>
</#macro>
<#macro XMLToJSON node>
    <#if (node?children?size==1 && node?children?first?node_type=='text' )>
        "${node?children?first?j_string}"
    <#else>
        <#if ((node?children?first?node_name)?? && node[node?children?first?node_name]?size> 1)>
            [
            <#list node?children as item>
                <#if item?node_name?has_content>
                    {
                        "${item?node_name}" :
                        <@XMLToJSON item />
                    }
                    <#if item_has_next>,</#if>
                <#else>
                    <@XMLToJSON item />
                    <#if item_has_next>,</#if>
                </#if>
            </#list>
            ]
        <#else>
            {
            <#list node?children as item>
                "${item?node_name}":
                <@XMLToJSON item />
                <#if item_has_next>,</#if>
            </#list>
            }
        </#if>
    </#if>
</#macro>